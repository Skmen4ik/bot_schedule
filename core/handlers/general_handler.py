import csv
import os

from aiogram import types, Dispatcher

from config import admins_id, path_statistic_func, path_statistic_button
from core.data_base.base import check_user_in_users, registration_user, get_quantity_users, get_statistic_button, \
    get_statistic_func
from core.keyboards.inline import main_menu, back_main_menu_o, rasp_menu
from core.utils_bot.send_rasp import del_message
from core.utils_bot.text_to_send import rasp_menu_text
from create_bot import bot


async def get_start(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    with open('users', 'a', encoding='utf-8') as file:
        file.write(f'https://t.me/{message.chat.username}, {message.from_user.full_name}, {message.from_user.id}\n')

    if not check_user_in_users(message.from_user.id):
        registration_user(message.from_user.id)
    await bot.send_message(message.from_user.id,
                           f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –ü–æ–ª—É—á–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ü–û–õ–ù–û–°–¢–¨–Æ;)\n\n'
                           f'/developers - —É–∑–Ω–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤\n'
                           f'–ü–æ –≤—Å–µ–º –±–∞–≥–∞–º, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –ø–∏—Å–∞—Ç—å —Å—é–¥–∞: @skmen4ik'
                           , reply_markup=main_menu)


async def to_main_menu(message: types.CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    await del_message(message)
    await bot.send_message(message.from_user.id,
                           f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –ü–æ–ª—É—á–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ü–û–õ–ù–û–°–¢–¨–Æ;)\n\n'
                           f'/developers - —É–∑–Ω–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤\n'
                           f'–ü–æ –≤—Å–µ–º –±–∞–≥–∞–º, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –ø–∏—Å–∞—Ç—å —Å—é–¥–∞: @skmen4ik',
                           reply_markup=main_menu)


async def print_developers(message: types.Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞. –°–∞–º–∞—è –≤–∞–∂–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ù–ï –¢–†–û–ì–ê–¢–¨ –ë–õ–ï–ê–¢"""
    await bot.send_message(message.from_user.id, '–ü–æ–≤–µ–ª–∏—Ç–µ–ª–∏ —Å–≤–æ–∏—Ö —Å—É–¥–µ–±, –º–µ–≥–∞—É—Å–ø–µ—à–Ω—ã–µ –ª—é–¥–∏:\n\n'
                                                 '@skmen4ik - –≤–µ–ª–∏—á–∞–π—à–∏–π –ª–æ–≥–∏—Å—Ç&–±–æ—Ç–æ–≤–æ–¥üëë\n'
                                                 '@Deley00 - —Å–µ—Ä–∂–∞–Ω—Ç –≥—Ä–∞—Ñ–æ–Ω–∏–πüé©\n\n'
                                                 '@osinagm - –±–û—Ç–æ–≤—ã–π —Å–æ–º–µ–ª—å–µüßê\n'
                                                 '@hoperbanif - –±–û—Ç–æ–≤—ã–π —Å–æ–º–µ–ª—å–µüßê', reply_markup=back_main_menu_o)


async def print_statistic(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É /stat –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∑–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π admins_id –∏–∑ —Ñ–∞–π–ª–∞ config.py"""
    text = ('–í—Å–µ–≥–æ: {}.\n\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏: {}\n'
            '–°—Ç—É–¥–µ–Ω—Ç—ã: {}\n–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {}\n'
            '–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏: {}\n').format(*get_quantity_users())

    list_statistic_button = get_statistic_button()
    with open(path_statistic_button, 'w', newline='') as csvfile:
        spamwriter = csv.writer(csvfile, delimiter=',')
        spamwriter.writerow(
            ('all_rasp', 'all_rasp_error', 'teacher', 'teacher_error', 'student', 'student_error', 'date_start'))
        spamwriter.writerows(list_statistic_button)

    list_statistic_func = get_statistic_func()
    with open(path_statistic_func, 'w', newline='') as csvfile:
        spamwriter = csv.writer(csvfile, delimiter=',')
        spamwriter.writerow(
            ('all_rasp', 'all_rasp_error', 'teacher', 'teacher_error', 'student', 'student_error', 'date_start', 'cabinets', 'cabinets_errors'))
        spamwriter.writerows(list_statistic_func)

    await bot.send_message(message.from_user.id, text)
    await bot.send_document(message.from_user.id, document=types.InputFile(path_statistic_button))
    await bot.send_document(message.from_user.id, document=types.InputFile(path_statistic_func))

    for file in (path_statistic_button, path_statistic_func):
        os.remove(file)


async def get_menu_rasp(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    if not check_user_in_users(message.from_user.id):
        registration_user(message.from_user.id)

    await bot.send_message(message.from_user.id, rasp_menu_text, reply_markup=rasp_menu)


def register_general_handlers(dp: Dispatcher):
    dp.register_message_handler(get_start, commands=['start'])
    dp.register_message_handler(get_menu_rasp, commands=['menu'])
    dp.register_message_handler(print_developers, commands=['developers'])
    dp.register_callback_query_handler(to_main_menu, text='to_main_menu')
    dp.register_message_handler(print_statistic, lambda message: message.from_user.id in admins_id, commands=['stat'])
